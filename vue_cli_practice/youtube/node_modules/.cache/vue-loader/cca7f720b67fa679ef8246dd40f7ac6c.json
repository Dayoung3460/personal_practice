{"remainingRequest":"C:\\Users\\People\\Desktop\\personal_practice\\vue_cli_practice\\youtube\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\People\\Desktop\\personal_practice\\vue_cli_practice\\youtube\\src\\components\\UserEdit.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\People\\Desktop\\personal_practice\\vue_cli_practice\\youtube\\src\\components\\UserEdit.vue","mtime":1606176923261},{"path":"C:\\Users\\People\\Desktop\\personal_practice\\vue_cli_practice\\youtube\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1606176912250},{"path":"C:\\Users\\People\\Desktop\\personal_practice\\vue_cli_practice\\youtube\\node_modules\\babel-loader\\lib\\index.js","mtime":1606176912034},{"path":"C:\\Users\\People\\Desktop\\personal_practice\\vue_cli_practice\\youtube\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1606176912250},{"path":"C:\\Users\\People\\Desktop\\personal_practice\\vue_cli_practice\\youtube\\node_modules\\vue-loader\\lib\\index.js","mtime":1606176921943}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { eventBus } from '../main.js'\n\nexport default {\n  props: [\"name\", \"address\", \"phone\", \"hasDog\"],\n  data() {\n    return {\n      user: {}\n    }\n  },\n  created() {\n    this.user.name = this.name\n    this.user.address = this.address\n    this.user.phone = this.phone\n    this.user.hasDog = this.hasDog\n  },\n  methods: {\n    changeUser() {\n      // child라는 에밋을 부모 컴포넌트로 보내.\n      // this.user의 데이터와 함께\n      this.$emit(\"child\", this.user)\n\n      // emit's first param is msg to parent's component\n      // 형제 컴포넌트끼리도 가능. 사실 유저디테일이 가상의 부모 컴퍼넌트지\n      // 유저에딧에서 날짜 데이터를 유저디테일로 보내는거라.\n      // second is param of function\n      // eventBus.$emit(\"userWasEdited\", new Date())\n      eventBus.userWasEdited(new Date())\n    }\n  }\n}\n",{"version":3,"sources":["UserEdit.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"UserEdit.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div class=\"yellow lighten-3 pa-3\">\r\n    <h3>회원 정보를 수정할 수 있습니다.</h3>\r\n    <p>수정사항</p>\r\n    <v-text-field\r\n      label=\"Name\"\r\n      v-model=\"user.name\"\r\n    >\r\n    </v-text-field>\r\n    <v-text-field\r\n      label=\"Address\"\r\n      v-model='user.address'\r\n    >\r\n    </v-text-field>\r\n    <v-text-field\r\n      label=\"Phone\"\r\n      v-model=\"user.phone\"\r\n    >\r\n    </v-text-field>\r\n    <v-radio-group v-model=\"user.hasDog\">\r\n      <v-radio\r\n        label=\"I have a pet\"\r\n        :value=\"true\"\r\n      ></v-radio>\r\n      <v-radio\r\n        label=\"I don't have a pet\"\r\n        :value=\"false\"\r\n      ></v-radio>\r\n    </v-radio-group>\r\n    <v-btn @click=\"changeUser\">Save</v-btn>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import { eventBus } from '../main.js'\r\n\r\n  export default {\r\n    props: [\"name\", \"address\", \"phone\", \"hasDog\"],\r\n    data() {\r\n      return {\r\n        user: {}\r\n      }\r\n    },\r\n    created() {\r\n      this.user.name = this.name\r\n      this.user.address = this.address\r\n      this.user.phone = this.phone\r\n      this.user.hasDog = this.hasDog\r\n    },\r\n    methods: {\r\n      changeUser() {\r\n        // child라는 에밋을 부모 컴포넌트로 보내.\r\n        // this.user의 데이터와 함께\r\n        this.$emit(\"child\", this.user)\r\n\r\n        // emit's first param is msg to parent's component\r\n        // 형제 컴포넌트끼리도 가능. 사실 유저디테일이 가상의 부모 컴퍼넌트지\r\n        // 유저에딧에서 날짜 데이터를 유저디테일로 보내는거라.\r\n        // second is param of function\r\n        // eventBus.$emit(\"userWasEdited\", new Date())\r\n        eventBus.userWasEdited(new Date())\r\n      }\r\n    }\r\n  }\r\n</script>\r\n"]}]}